<?xml version="1.0"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- Brushes -->
    <LinearGradientBrush x:Key="SelectionBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF717171" Offset="0.2"/>
        <GradientStop Color="#FF919191" Offset="0.85"/>
        <GradientStop Color="#FF818181" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF717171" Offset="0.2"/>
        <GradientStop Color="#FF919191" Offset="0.85"/>
        <GradientStop Color="#FF818181" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonHover" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF616161" Offset="0.2"/>
        <GradientStop Color="#FF818181" Offset="0.85"/>
        <GradientStop Color="#FF717171" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonPressed"  StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF717171" Offset="0.35"/>
        <GradientStop Color="Black" Offset="0.95"/>
        <GradientStop Color="#FF818181" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ScrollBarButtonHover" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#4FB1B1B1" Offset="0.2"/>
        <GradientStop Color="#99B1B1B1" Offset="0.85"/>
        <GradientStop Color="#C2B1B1B1" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ScrollBarButtonPressed"  StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#7FB1B1B1" Offset="0.2"/>
        <GradientStop Color="#CCB1B1B1" Offset="0.85"/>
        <GradientStop Color="#F2B1B1B1" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ScrollBarTrack"  StartPoint="0,0" EndPoint="1,0">
        <GradientStop Color="#AAB1B1B1" Offset="0.0"/>
        <GradientStop Color="White" Offset="0.35"/>
        <GradientStop Color="White" Offset="0.65"/>
        <GradientStop Color="#AAB1B1B1" Offset="1.0"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ScrollBarThumbVertical"  StartPoint="0,0" EndPoint="1,0">
        <GradientStop Color="White" Offset="0"/>
        <GradientStop Color="#AAB1B1B1" Offset="0.75"/>
        <GradientStop Color="#55B1B1B1" Offset="1.0"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ScrollBarThumbVerticalPressed"  StartPoint="0,0" EndPoint="1,0">
        <GradientStop Color="White" Offset="0"/>
        <GradientStop Color="#AA919191" Offset="0.75"/>
        <GradientStop Color="#55919191" Offset="1.0"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ScrollBarThumbHorizontal"  StartPoint="0,1" EndPoint="0,0">
        <GradientStop Color="White" Offset="0"/>
        <GradientStop Color="#AAB1B1B1" Offset="0.75"/>
        <GradientStop Color="#55B1B1B1" Offset="1.0"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ScrollBarThumbHorizontalPressed"  StartPoint="0,1" EndPoint="0,0">
        <GradientStop Color="White" Offset="0"/>
        <GradientStop Color="#AA919191" Offset="0.75"/>
        <GradientStop Color="#55919191" Offset="1.0"/>
    </LinearGradientBrush>

    <!-- ButtonBase -->
    <Style x:Key="ButtonBase" TargetType="ButtonBase">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{StaticResource ButtonBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Border BorderThickness="1" CornerRadius="0" BorderBrush="#FF919191"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonPressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button -->
    <Style TargetType="Button" BasedOn="{StaticResource ButtonBase}" />

    <!-- ScrollBarButton -->
    <Style x:Key="ScrollBarButton" TargetType="RepeatButton" >
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="#FF919191"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ScrollBarButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ScrollBarButtonPressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollBar -->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Background="{StaticResource ScrollBarTrack}">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="17"/>
                            <RowDefinition Height="0.00001*"/>
                            <RowDefinition MaxHeight="17"/>
                        </Grid.RowDefinitions>
                        <RepeatButton x:Name="DecreaseRepeat" Command="ScrollBar.LineUpCommand" Style="{StaticResource ScrollBarButton}"
                                      Foreground="#FF919191">
                            <Path x:Name="DecreaseArrow" Data="F1 M 3.5,0L 0,7L 7,7L 3.5,0 Z " HorizontalAlignment="Center" VerticalAlignment="Center"
                                  Fill="{Binding ElementName=DecreaseRepeat, Path=Foreground}"/>
                        </RepeatButton>
                        <RepeatButton x:Name="IncreaseRepeat" Grid.Row="2" Command="ScrollBar.LineDownCommand" Style="{StaticResource ScrollBarButton}"
                                      Foreground="#FF919191">
                            <Path x:Name="IncreaseArrow" Data="F1 M 3.5,7L 7,0L 0,0L 3.5,7 Z " Fill="{Binding ElementName=DecreaseRepeat, Path=Foreground}"
                                  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </RepeatButton>
                        <Border x:Name="Line" BorderBrush="#FF919191" BorderThickness="1" Width="1"
                                Grid.RowSpan="3" HorizontalAlignment="Left"/>
                        <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="True" Focusable="False">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Background="{StaticResource ScrollBarThumbVertical}"
                                       BorderBrush="#FF919191" Margin="0,0,-1,0">
                                    <Thumb.Template>
                                        <ControlTemplate>
                                            <Grid Margin="{TemplateBinding Margin}">
                                                <Border BorderThickness="1" BorderBrush="#FF919191" Background="{TemplateBinding Background}" />
                                                <Rectangle Height="4" Width="4" StrokeThickness="2" Stroke="{TemplateBinding BorderBrush}"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="False"/>
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="False"/>
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal"/>
                            <Setter TargetName="Thumb" Property="Background" Value="{StaticResource ScrollBarThumbHorizontal}"/>
                            <Setter TargetName="Thumb" Property="Margin" Value="0,-1,0,0"/>
                            <Setter TargetName="Line" Property="HorizontalAlignment" Value="Right"/>
                            <Setter TargetName="DecreaseRepeat" Property="Command" Value="ScrollBar.LineLeftCommand"/>
                            <Setter TargetName="IncreaseRepeat" Property="Command" Value="ScrollBar.LineRightCommand"/>
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand"/>
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand"/>
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Thumb" Property="BorderBrush" Value="Black" />
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="True">
                            <Setter TargetName="Thumb" Property="BorderBrush" Value="Black" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="Thumb" Property="IsDragging" Value="True" />
                                <Condition Property="Orientation" Value="Vertical"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Thumb" Property="Background" Value="{StaticResource ScrollBarThumbVerticalPressed}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="Thumb" Property="IsDragging" Value="True" />
                                <Condition Property="Orientation" Value="Horizontal"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Thumb" Property="Background" Value="{StaticResource ScrollBarThumbHorizontalPressed}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DataGrid -->
    <Style TargetType="DataGrid">
        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="FontFamily" Value="Consolas"/>
        <Setter Property="BorderBrush" Value="#FF919191"/>
        <Setter Property="Foreground" Value="#FF919191"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="SelectionMode" Value="Extended"/>
        <Setter Property="GridLinesVisibility" Value="none"/>
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="CanUserResizeColumns" Value="True"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
    </Style>
    <!-- ColumnHeaderRightGripperStyle -->
    <Style x:Key="ColumnHeaderRightGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- ColumnHeaderLeftGripperStyle -->
    <Style x:Key="ColumnHeaderLeftGripperStyle" BasedOn="{StaticResource ColumnHeaderRightGripperStyle}" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Name="Border" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- DataGridColumnHeader -->
    <Style TargetType="DataGridColumnHeader">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="SeparatorBrush" Value="#FFDDDDDD"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Grid Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Fill).Color" To="#FFB1B1B1"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[3].Color" To="#7FFFFFFF"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[2].Color" To="#CCFFFFFF"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[1].Color" To="#F2FFFFFF"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Fill).Color" To="#FFAAAAAA"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[0].Color" To="#D8FFFFFF"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[1].Color" To="#C6FFFFFF"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[2].Color" To="#8CFFFFFF"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[3].Color" To="#3FFFFFFF"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SortStates">
                                <VisualState x:Name="Unsorted"/>
                                <VisualState x:Name="SortAscending">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Opacity" Duration="0" To="1.0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SortDescending">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Opacity" Duration="0" To="1.0"/>
                                        <DoubleAnimation Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="(RenderTransform).ScaleY" Duration="0" To="-.9"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="BackgroundRectangle" Stretch="Fill" Fill="#FFCCCCCC" Grid.ColumnSpan="2"/>
                        <Rectangle x:Name="BackgroundGradient" Stretch="Fill" Grid.ColumnSpan="2">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                                    <GradientStop Color="#FCFFFFFF" Offset="0.015"/>
                                    <GradientStop Color="#F7FFFFFF" Offset="0.375"/>
                                    <GradientStop Color="#E5FFFFFF" Offset="0.6"/>
                                    <GradientStop Color="#D1FFFFFF" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Border BorderBrush="#FFDDDDDD" BorderThickness="1" Height="1" VerticalAlignment="Bottom"/>
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Margin="5,0,5,0" Content="{TemplateBinding Content}"/>
                            <Path Grid.Column="1" Name="SortIcon" Fill="#FFBBBBBB" RenderTransformOrigin=".5,.5" HorizontalAlignment="Left" VerticalAlignment="Center"
                                  Opacity="0" Stretch="Uniform" Width="8" Margin="4,0,0,0" Data="F1 M -5.215,6.099L 5.215,6.099L 0,0L -5.215,6.099 Z ">
                                <Path.RenderTransform>
                                    <ScaleTransform ScaleX=".9" ScaleY=".9"/>
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                        <Rectangle Name="VerticalSeparator" Grid.Column="1" Width="1" VerticalAlignment="Stretch" Fill="{TemplateBinding SeparatorBrush}"
                                   Visibility="{TemplateBinding SeparatorVisibility}"/>
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderRightGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderLeftGripperStyle}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- DataGridRow -->
    <Style TargetType="DataGridRow">
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource SelectionBackground}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="Black"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <!-- DataGridCellBase -->
    <Style x:Key="DataGridCellBase" TargetType="DataGridCell">
        <Setter Property="Margin" Value="5,0,5,0"/>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="{StaticResource SelectionBackground}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="DataGridCell" BasedOn="{StaticResource DataGridCellBase}"/>
</ResourceDictionary>
